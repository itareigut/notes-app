{"ast":null,"code":"var _jsxFileName = \"/home/mda/Documents/GitHub/notes-app/frontend/src/App.js\",\n  _s = $RefreshSig$();\n//import logo from './logo.svg'\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to hold notes and the new note input\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:5000/notes\").then(response => response.json()).then(data => setNotes(data));\n  }, []);\n  const handleAddNote = () => {\n    if (newNote.trim()) {\n      fetch(\"http://localhost:5000/notes\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text: newNote\n        })\n      }).then(() => {\n        fetchNotes();\n        setNewNote(\"\");\n      });\n    }\n  };\n  const fetchNotes = () => {\n    fetch(\"http://localhost:5000/notes\").then(response => response.json()).then(data => setNotes(data));\n  };\n  const handleDeleteNote = id => {\n    fetch(`http://localhost:5000/notes/${id}`, {\n      method: \"DELETE\"\n    }).then(() => {\n      setNotes(prevNotes => prevNotes.filter(note => note.id !== id));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newNote,\n      onChange: e => setNewNote(e.target.value),\n      placeholder: \"Enter a new note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddNote,\n      children: \"Add Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [note.text, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteNote(note.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gzpK0+mHvI9O3qinYq7RFFGMZng=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","notes","setNotes","newNote","setNewNote","fetch","then","response","json","data","handleAddNote","trim","method","headers","body","JSON","stringify","text","fetchNotes","handleDeleteNote","id","prevNotes","filter","note","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","_c","$RefreshReg$"],"sources":["/home/mda/Documents/GitHub/notes-app/frontend/src/App.js"],"sourcesContent":["//import logo from './logo.svg'\nimport './App.css'\n\nimport React, {useEffect, useState} from 'react'\n\nfunction App() {\n\n // State to hold notes and the new note input\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState(\"\")\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/notes\")\n    .then((response) => response.json())\n    .then((data) => setNotes(data))\n  }, [])\n\n  const handleAddNote = () => {\n    if (newNote.trim()) {\n      fetch(\"http://localhost:5000/notes\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ text: newNote }),\n      })\n      .then(() => {\n        fetchNotes()\n        setNewNote(\"\")\n      })\n    }\n  }\n\n  const fetchNotes = () => {\n    fetch(\"http://localhost:5000/notes\")\n      .then((response) => response.json())\n      .then((data) => setNotes(data))\n  }\n\n  const handleDeleteNote = (id) => {\n    fetch(`http://localhost:5000/notes/${id}`, {\n      method: \"DELETE\",\n    })\n    .then(() => {\n      setNotes((prevNotes) => prevNotes.filter((note) => note.id !== id))\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Notes App</h1>\n      <input type=\"text\" value={newNote} onChange={(e) => setNewNote(e.target.value)} placeholder=\"Enter a new note\"/>\n      <button onClick={handleAddNote}>Add Note</button>\n      <ul>\n        {notes.map((note) => (\n          <li key={note.id}>\n            {note.text}\n            <button onClick={() => handleDeleteNote(note.id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n\n}\n\nexport default App"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}