{"ast":null,"code":"var _jsxFileName = \"/home/mda/Documents/GitHub/notes-app/frontend/src/App.js\",\n  _s = $RefreshSig$();\n//import logo from './logo.svg'\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to hold notes and the new note input\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:5000/notes\").then(response => response.json()).then(data => setNotes(data));\n  }, []);\n\n  // Handle input change\n  const handleChange = e => {\n    setNewNote(e.target.value);\n  };\n  const handleAddNote = () => {\n    if (newNote.trim()) {\n      addNoteToBackend(newNote);\n    }\n  };\n  const addNoteToBackend = noteText => {\n    fetch(\"http://localhost:5000/notes\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text: noteText\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.message) {\n        setNotes(prevNotes => [...prevNotes, noteText]);\n        setNewNote(\"\");\n      }\n    });\n  };\n  const handleDeleteNote = index => {\n    deleteNoteFromBackend(index);\n  };\n  const deleteNoteFromBackend = index => {\n    fetch(`http://localhost:5000/notes/${index}`, {\n      method: \"DELETE\"\n    }).then(response => response.json()).then(data => {\n      if (data.message) {\n        setNotes(prevNotes => prevNotes.filter((note, i) => i !== index));\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newNote,\n      onChange: handleChange,\n      placeholder: \"Enter a new note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddNote,\n      children: \"Add Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map((note, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [note, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteNote(index),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gzpK0+mHvI9O3qinYq7RFFGMZng=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","notes","setNotes","newNote","setNewNote","fetch","then","response","json","data","handleChange","e","target","value","handleAddNote","trim","addNoteToBackend","noteText","method","headers","body","JSON","stringify","text","message","prevNotes","handleDeleteNote","index","deleteNoteFromBackend","filter","note","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","map","_c","$RefreshReg$"],"sources":["/home/mda/Documents/GitHub/notes-app/frontend/src/App.js"],"sourcesContent":["//import logo from './logo.svg'\nimport './App.css'\n\nimport React, {useEffect, useState} from 'react'\n\nfunction App() {\n\n // State to hold notes and the new note input\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState(\"\")\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/notes\")\n    .then((response) => response.json())\n    .then((data) => setNotes(data))\n  }, [])\n\n  // Handle input change\n  const handleChange = (e) => {\n    setNewNote(e.target.value)\n  }\n\n  const handleAddNote = () => {\n    if (newNote.trim()){\n      addNoteToBackend(newNote)\n    }\n  }\n\n  const addNoteToBackend = (noteText) => {\n    fetch(\"http://localhost:5000/notes\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\", },\n      body: JSON.stringify({ text: noteText }),\n    })\n    .then((response) => response.json())\n    .then((data) => {\n      if (data.message) {\n        setNotes((prevNotes) => [...prevNotes, noteText])\n        setNewNote(\"\")\n      }\n    })\n  }\n\n  \n\n  const handleDeleteNote = (index) => {\n    deleteNoteFromBackend(index);\n  };\n\n  const deleteNoteFromBackend = (index) => {\n    fetch(`http://localhost:5000/notes/${index}`, {\n      method: \"DELETE\",\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.message) {\n          setNotes((prevNotes) =>\n            prevNotes.filter((note, i) => i !== index)\n          );\n        }\n      });\n  };\n\n\n  return (\n    <div className=\"App\">\n      <h1>Notes App</h1>\n\n      {/* Input field for new note */}\n      <input\n        type=\"text\"\n        value={newNote}\n        onChange={handleChange}\n        placeholder=\"Enter a new note\"\n      />\n      <button onClick={handleAddNote}>Add Note</button>\n\n      {/* Display notes list */}\n      <ul>\n        {notes.map((note, index) => (\n          <li key={index}>\n            {note}\n            <button onClick={() => handleDeleteNote(index)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}